name: Publish to npm

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      dry_run:
        description: 'Dry run (test without publishing)'
        required: false
        default: true
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      packages: read   # Needed to read package info
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.BIGQUERY_KEY }}'
      
      - run: npm ci
      
      - run: npm run lint
      
      - run: npm run build
      
      - run: npm run test-silent
      
      - name: Bump version and get new version
        id: version
        run: |
          # Get current version before bump
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Bump version (this updates package.json and package-lock.json)
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          
          # Get new version after bump
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version will be: $NEW_VERSION"
      
      - run: npm run package-npm
      
      - name: Publish to npm (dry run)
        if: inputs.dry_run == true
        run: |
          echo "ðŸ§ª DRY RUN: Testing npm publish (no actual upload)"
          npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: "${{ secrets.NPM_TOKEN }}"
      
      - name: Publish to npm (real)
        if: inputs.dry_run == false
        run: |
          echo "ðŸš€ PUBLISHING: Uploading to npm registry"
          npm publish
        env:
          NODE_AUTH_TOKEN: "${{ secrets.NPM_TOKEN }}"
      
      - name: Summary
        run: |
          echo "## ðŸ“‹ Publishing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Mode**: ${{ inputs.dry_run && 'ðŸ§ª Dry Run' || 'ðŸš€ Live Publishing' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.version.outputs.new-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous**: ${{ steps.version.outputs.current-version }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            echo "- **Status**: âœ… Tested successfully (no changes made)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: âœ… Published to npm" >> $GITHUB_STEP_SUMMARY
            echo "- **NPM**: https://www.npmjs.com/package/@malloydata/cli/v/${{ steps.version.outputs.new-version }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Next steps:" >> $GITHUB_STEP_SUMMARY
            echo "1. Commit the version bump:" >> $GITHUB_STEP_SUMMARY
            echo "   \`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "   git pull" >> $GITHUB_STEP_SUMMARY
            echo "   # Manually update package.json version to ${{ steps.version.outputs.new-version }}" >> $GITHUB_STEP_SUMMARY
            echo "   git add package.json package-lock.json" >> $GITHUB_STEP_SUMMARY
            echo "   git commit -m 'chore: bump version to ${{ steps.version.outputs.new-version }}'" >> $GITHUB_STEP_SUMMARY
            echo "   git push origin main" >> $GITHUB_STEP_SUMMARY
            echo "   \`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "2. Create a git tag: \`git tag v${{ steps.version.outputs.new-version }} && git push origin v${{ steps.version.outputs.new-version }}\`" >> $GITHUB_STEP_SUMMARY
            echo "3. Create a GitHub release manually if desired" >> $GITHUB_STEP_SUMMARY
          fi
